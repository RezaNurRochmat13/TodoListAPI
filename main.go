package main

import (
	"todolist-api/database"
	"todolist-api/routes"

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"

	// docs are generated by Swag CLI, you have to import them.
	// replace with your own docs folder, usually "github.com/username/reponame/docs"
	_ "todolist-api/docs"
)

// @title Todolist Example API
// @version 1.0
// @description This is a sample swagger for Todolist API
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email fiber@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8081
// @BasePath /
func main() {
    app := fiber.New() // Creating a new instance of Fiber.

    app.Get("/swagger/*", swagger.HandlerDefault) // default

	app.Get("/swagger/*", swagger.New(swagger.Config{ // custom
		URL: "http://example.com/doc.json",
		DeepLinking: false,
		// Expand ("list") or Collapse ("none") tag groups by default
		DocExpansion: "none",
		// Prefill OAuth ClientId on Authorize popup
		OAuth: &swagger.OAuthConfig{
			AppName:  "OAuth Provider",
			ClientId: "21bb4edc-05a7-4afc-86f1-2e151e4ba6e2",
		},
		// Ability to change OAuth2 redirect uri location
		OAuth2RedirectUrl: "http://localhost:8080/swagger/oauth2-redirect.html",
	}))

	dbErr := database.InitDB() // Database connection initialization

    if dbErr != nil {
        panic(dbErr)
    }


    list := app.Group("/tasks")

    list.Get("/", routes.GetAllTasks) //Get endpoint for fetching all the tasks.

    list.Get("/:id", routes.GetTask) //Get endpoint for fetching a single task.

    list.Post("/", routes.AddTask) //Post endpoint for add a new task.

    list.Delete("/:id", routes.DeleteTask) //Delete endpoint for removing an existing task.

    list.Put("/:id", routes.UpdateTask) //Patch endpoint for updating an existing task.

	app.Listen(":8081")
}